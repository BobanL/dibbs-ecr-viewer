name: Create New Release
on:
  release:
    types: [published]

# Run all tests before making a release
jobs:
  list-containers:
    uses: ./.github/workflows/listContainers.yaml

  test-for-release:
    needs:
      - list-containers
    strategy:
      matrix:
        container: ${{fromJson(needs.list-containers.outputs.all-containers)}}
    uses: ./.github/workflows/run-container-workflow.yaml
    with:
      container: ${{ matrix.container }}
      ref_name: ${{ github.ref_name }}
    secrets: inherit

  # Rebuild all containers for the new release
  build-containers-for-release:
    name: Build containers
    needs:
      - list-containers
      - test-for-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container-to-build: ${{fromJson(needs.list-containers.outputs.all-containers)}}
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Check Out Changes
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{matrix.container-to-build}}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ !github.event.release.prerelease }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./containers/${{matrix.container-to-build}}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_VERSION: ${{ steps.meta.outputs.version }}

  # Create updated container docs for the latest release
  generate-and-update-python-container-docs:
    needs:
      - list-containers
      - build-containers-for-release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    services:
      test-db:
        image: postgres:13-alpine3.16
        env:
          POSTGRES_PASSWORD: pw
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name testdb
        ports:
          - 5432:5432
    strategy:
      matrix:
        container: ${{fromJson(needs.list-containers.outputs.python-containers)}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Update Container Documentation
        env:
          APP_VERSION: ${{ needs.build-containers-for-release.outputs.version }}
          # Record Linkage
          MPI_DBNAME: testdb
          MPI_PASSWORD: pw
          MPI_DB_TYPE: postgres
          MPI_HOST: localhost
          MPI_USER: postgres
          MPI_PORT: 5432
          MPI_PATIENT_TABLE: patient
          MPI_PERSON_TABLE: person
          # Orchestration
          TRIGGER_CODE_REFERENCE_URL: http://localhost:8086
          VALIDATION_URL: http://localhost:8081
          FHIR_CONVERTER_URL: http://localhost:8082
          INGESTION_URL: http://localhost:8083
          MESSAGE_PARSER_URL: http://localhost:8085
        run: |
          npm i -g redoc-cli
          CONTAINER=${{ matrix.container }}
          cd $GITHUB_WORKSPACE/containers/$CONTAINER
          cp $GITHUB_WORKSPACE/utils/make_openapi_json.py .
          pip install -r requirements.txt
          python make_openapi_json.py
          redoc-cli build -o $GITHUB_WORKSPACE/docs/${{ needs.build-containers-for-release.outputs.version }}/containers/$CONTAINER.html openapi.json

      - uses: actions/upload-artifact@v4
        with:
          name: container-docs-${{ matrix.container }}
          path: ./docs/${{ needs.build-containers-for-release.outputs.version }}/containers

  generate-and-update-ecr-viewer-container-docs:
    needs:
      - build-containers-for-release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Update Container Documentation
        env:
          APP_VERSION: ${{ needs.build-containers-for-release.outputs.version }}
        run: |
          cd $GITHUB_WORKSPACE/containers/ecr-viewer
          npm ci
          npm run docs -- --out $GITHUB_WORKSPACE/docs/${{ needs.build-containers-for-release.outputs.version }}/containers/ecr-viewer
      - uses: actions/upload-artifact@v4
        with:
          name: container-docs-ecr-viewer
          path: ./docs/${{ needs.build-containers-for-release.outputs.version }}/containers
        
  commit-docs:
    needs:
      - build-containers-for-release
      - generate-and-update-python-container-docs
      - generate-and-update-ecr-viewer-container-docs
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: docs

      - name: Download container docs from artifacts
        uses: actions/download-artifact@v4.2.1
        with:
          pattern: container-docs-*
          merge-multiple: true
          path: ./docs/${{ needs.build-containers-for-release.outputs.version }}/containers

      - name: Copy to latest folder
        run: |
          rm -rf ./docs/latest
          mkdir -p ./docs/latest/containers
          cp -r ./docs/${{ needs.build-containers-for-release.outputs.version }}/containers/* ./docs/latest/containers

      - name: Commit New Documentation
        uses: EndBug/add-and-commit@v9
        with:
          add: docs
          message: Automated update of docs for ${{ needs.build-containers-for-release.outputs.version }} release.
